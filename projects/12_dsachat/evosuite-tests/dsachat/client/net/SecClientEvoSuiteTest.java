/*
 * This file was automatically generated by EvoSuite
 */

package dsachat.client.net;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dsachat.client.net.SecClient;
import dsachat.server.Handler;
import dsachat.share.InputListener;
import java.io.IOException;
import java.net.UnknownHostException;
import java.security.GeneralSecurityException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SecClientEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      SecClient secClient0 = new SecClient();
      boolean boolean0 = secClient0.isConnected();
      assertEquals("Thread[Thread-4689,5,Test Execution]", secClient0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      SecClient secClient0 = new SecClient();
      // Undeclared exception!
      try {
        secClient0.send((Object) "R MfLgoP,X:C");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SecClient secClient0 = new SecClient();
      // Undeclared exception!
      try {
        secClient0.disconnect();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SecClient secClient0 = new SecClient();
      // Undeclared exception!
      try {
        secClient0.exchange();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          SecClient secClient0 = new SecClient();
          // Undeclared exception!
          try {
            secClient0.connect((String) null, 1135);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.net.SocketPermission 127.0.0.1:1135 connect,resolve)
             * java.lang.Thread.getStackTrace(Thread.java:1479)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkConnect(SecurityManager.java:1034)
             * java.net.Socket.connect(Socket.java:524)
             * java.net.Socket.connect(Socket.java:478)
             * java.net.Socket.<init>(Socket.java:375)
             * java.net.Socket.<init>(Socket.java:189)
             * dsachat.client.net.SecClient.connect(SecClient.java:107)
             * sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             * sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:262)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:662)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test5()  throws Throwable  {
      SecClient secClient0 = new SecClient();
      // Undeclared exception!
      try {
        secClient0.getClientPort();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SecClient secClient0 = new SecClient();
      Handler handler0 = new Handler();
      secClient0.addInputListener((InputListener) handler0);
      assertEquals("Thread[Thread-4721,5,Test Execution]", secClient0.toString());
      assertEquals(4737L, secClient0.getId());
  }

  @Test
  public void test7()  throws Throwable  {
      Handler handler0 = new Handler();
      SecClient secClient0 = new SecClient();
      secClient0.removeInputListener((InputListener) handler0);
      assertEquals(4742L, secClient0.getId());
      assertEquals("Thread-4726", secClient0.getName());
  }

  @Test
  public void test8()  throws Throwable  {
      SecClient secClient0 = new SecClient();
      secClient0.initialize(false);
      assertEquals("Thread-4731", secClient0.getName());
      assertEquals("Thread[Thread-4731,5,Test Execution]", secClient0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      SecClient secClient0 = new SecClient();
      secClient0.initialize(true);
      assertEquals("Thread-4751", secClient0.getName());
      assertEquals(4767L, secClient0.getId());
  }

  @Test
  public void test10()  throws Throwable  {
      SecClient secClient0 = new SecClient();
      // Undeclared exception!
      try {
        secClient0.run();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
