/*
 * This file was automatically generated by EvoSuite
 */

package dsachat.share;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dsachat.share.Challenge;
import dsachat.share.hero.Hero;
import dsachat.share.hero.Weapon;
import org.dom4j.Document;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMDocumentType;
import org.dom4j.dom.DOMElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ChallengeEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      dOMDocument0.addElement("mzQWKLL&3CF'-cJzCLW", "mzQWKLL&3CF'-cJzCLW");
      Hero hero0 = new Hero((Document) dOMDocument0);
      Challenge challenge0 = new Challenge("FF", hero0, 0, true, "FF");
      boolean boolean0 = challenge0.isSilent();
      assertEquals(" FF:\trolled: 20automatic fail", challenge0.roll());
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      dOMDocument0.addElement("mzQWKLL&3CF'-cJzCLW", "mzQWKLL&3CF'-cJzCLW");
      Hero hero0 = new Hero((Document) dOMDocument0);
      Challenge challenge0 = new Challenge("FF", hero0, 0, true, "FF");
      challenge0.getTo();
      assertEquals(" FF:\trolled: 16  failed:  missing 17 points", challenge0.roll());
  }

  @Test
  public void test2()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      dOMDocument0.addElement("mzQWKLL&3CF'-cJzCLW", "mzQWKLL&3CF'-cJzCLW");
      Hero hero0 = new Hero((Document) dOMDocument0);
      Challenge challenge0 = new Challenge("FF", hero0, 0, true, "FF");
      String string0 = challenge0.roll();
      assertEquals(" FF:\trolled: 5  failed:  missing 6 points", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      dOMDocument0.addElement("mzQWKLL&3CF'-cJzCLW", "mzQWKLL&3CF'-cJzCLW");
      Hero hero0 = new Hero((Document) dOMDocument0);
      Challenge challenge0 = new Challenge("mzQWKLL&3CF'-cJzCLW", 0, hero0, true, "mzQWKLL&3CF'-cJzCLW");
      assertNotNull(challenge0);
      
      String string0 = challenge0.roll();
      assertNotNull(string0);
      assertEquals(" missing Talent, Spell, ...", string0);
      assertEquals(true, challenge0.isSilent());
  }

  @Test
  public void test4()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("");
      DOMDocument dOMDocument0 = new DOMDocument(dOMElement0);
      Hero hero0 = new Hero((Document) dOMDocument0);
      Weapon weapon0 = Weapon.BASILISKENZUNGE;
      Challenge challenge0 = new Challenge(weapon0, false, hero0, 1916, false, "");
      // Undeclared exception!
      try {
        challenge0.roll();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Weapon weapon0 = Weapon.FLEISCHERBEIL;
      DOMElement dOMElement0 = new DOMElement("%Beo1M:=*P;tW<r");
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType("%Beo1M:=*P;tW<r", "%Beo1M:=*P;tW<r", "%Beo1M:=*P;tW<r");
      DOMDocument dOMDocument0 = new DOMDocument("%Beo1M:=*P;tW<r", dOMElement0, dOMDocumentType0);
      Hero hero0 = new Hero((Document) dOMDocument0);
      Challenge challenge0 = new Challenge(weapon0, true, hero0, 0, true, "%Beo1M:=*P;tW<r");
      // Undeclared exception!
      try {
        challenge0.roll();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("");
      DOMDocument dOMDocument0 = new DOMDocument(dOMElement0);
      Hero hero0 = new Hero((Document) dOMDocument0);
      Challenge challenge0 = new Challenge("", hero0, (-758), false, "");
      assertEquals(" -758:\trolled: 4  success:  left over 753 points", challenge0.roll());
      
      String string0 = challenge0.roll();
      assertNotNull(string0);
      assertEquals(" -758:\trolled: 4  success:  left over 753 points", string0);
  }
}
