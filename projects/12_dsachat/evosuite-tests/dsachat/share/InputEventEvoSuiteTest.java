/*
 * This file was automatically generated by EvoSuite
 */

package dsachat.share;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import dsachat.server.net.SecServer;
import dsachat.share.ConnectionEndpoint;
import dsachat.share.InputEvent;
import java.net.Proxy;
import java.net.Socket;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class InputEventEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      SecServer secServer0 = new SecServer(socket0);
      InputEvent inputEvent0 = new InputEvent((ConnectionEndpoint) secServer0, (Object) "Socket[unconnected]");
      String string0 = (String)inputEvent0.getData();
      assertNotNull(string0);
      assertEquals(281L, secServer0.getId());
  }

  @Test
  public void test1()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      Socket socket0 = new Socket(proxy0);
      SecServer secServer0 = new SecServer(socket0);
      InputEvent inputEvent0 = new InputEvent((ConnectionEndpoint) secServer0, (Object) "Socket[unconnected]");
      SecServer secServer1 = (SecServer)inputEvent0.getSource();
      assertNotNull(secServer1);
      assertEquals("dsachat.share.InputEvent[source=Thread[Thread-268,5,Test Execution]]", inputEvent0.toString());
  }
}
