/*
 * This file was automatically generated by EvoSuite
 */

package com.ib.client;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.ib.client.ComboLeg;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ComboLegEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(0, 0, (String) null, (String) null, 0, 1, (String) null);
      boolean boolean0 = comboLeg0.equals((Object) comboLeg1);
      assertEquals(false, boolean0);
      assertEquals(0, comboLeg1.m_ratio);
      assertEquals(0, comboLeg1.m_conId);
      assertFalse(comboLeg1.equals(comboLeg0));
      assertEquals(0, comboLeg1.m_openClose);
  }

  @Test
  public void test1()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals((Object) null);
      assertEquals(0, comboLeg0.m_conId);
      assertEquals(false, boolean0);
      assertEquals(0, comboLeg0.m_shortSaleSlot);
      assertEquals(0, comboLeg0.m_ratio);
      assertEquals(0, comboLeg0.m_openClose);
  }

  @Test
  public void test2()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(1209, 1209, (String) null, (String) null, 0);
      boolean boolean0 = comboLeg0.equals((Object) comboLeg1);
      assertEquals(false, boolean0);
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertEquals(1209, comboLeg1.m_ratio);
      assertEquals(0, comboLeg1.m_openClose);
      assertEquals(1209, comboLeg1.m_conId);
  }

  @Test
  public void test3()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(0, (-786), (String) null, (String) null, 0);
      boolean boolean0 = comboLeg0.equals((Object) comboLeg1);
      assertEquals(0, comboLeg1.m_openClose);
      assertEquals(0, comboLeg1.m_conId);
      assertEquals(false, boolean0);
      assertFalse(comboLeg1.equals(comboLeg0));
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertEquals((-786), comboLeg1.m_ratio);
  }

  @Test
  public void test4()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg(1, 1, (String) null, (String) null, 5, 5, (String) null);
      ComboLeg comboLeg1 = new ComboLeg(1, 1, (String) null, (String) null, 1);
      boolean boolean0 = comboLeg0.equals((Object) comboLeg1);
      assertEquals(5, comboLeg0.m_shortSaleSlot);
      assertEquals(false, boolean0);
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertEquals(1, comboLeg0.m_conId);
      assertEquals(1, comboLeg0.m_ratio);
      assertEquals(5, comboLeg0.m_openClose);
  }

  @Test
  public void test5()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals((Object) comboLeg1);
      assertEquals(0, comboLeg0.m_conId);
      assertEquals(0, comboLeg0.m_openClose);
      assertEquals(0, comboLeg0.m_shortSaleSlot);
      assertEquals(0, comboLeg0.m_ratio);
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      comboLeg0.m_action = "c4>";
      ComboLeg comboLeg1 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals((Object) comboLeg1);
      assertEquals(0, comboLeg1.m_ratio);
      assertEquals(0, comboLeg1.m_openClose);
      assertFalse(comboLeg1.equals(comboLeg0));
      assertEquals(0, comboLeg1.m_conId);
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(0, 0, (String) null, "}ZYNs[YC!6*oW", 0);
      boolean boolean0 = comboLeg0.equals((Object) comboLeg1);
      assertEquals(0, comboLeg0.m_conId);
      assertEquals(0, comboLeg0.m_openClose);
      assertFalse(comboLeg1.equals(comboLeg0));
      assertEquals(false, boolean0);
      assertEquals(0, comboLeg0.m_shortSaleSlot);
      assertEquals(0, comboLeg0.m_ratio);
  }

  @Test
  public void test8()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      comboLeg0.m_designatedLocation = "}ZYNs[YC!6*oW";
      ComboLeg comboLeg1 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals((Object) comboLeg1);
      assertEquals(false, boolean0);
      assertEquals(0, comboLeg0.m_shortSaleSlot);
      assertFalse(comboLeg1.equals(comboLeg0));
      assertEquals(0, comboLeg0.m_ratio);
  }
}
