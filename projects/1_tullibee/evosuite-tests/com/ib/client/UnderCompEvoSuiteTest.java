/*
 * This file was automatically generated by EvoSuite
 */

package com.ib.client;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.ib.client.UnderComp;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UnderCompEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      boolean boolean0 = underComp0.equals((Object) null);
      assertEquals(0.0, underComp0.m_price, 0.01D);
      assertEquals(0.0, underComp0.m_delta, 0.01D);
      assertEquals(false, boolean0);
      assertEquals(0, underComp0.m_conId);
  }

  @Test
  public void test1()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      UnderComp underComp1 = new UnderComp();
      boolean boolean0 = underComp0.equals((Object) underComp1);
      assertEquals(0.0, underComp1.m_delta, 0.01D);
      assertEquals(true, boolean0);
      assertEquals(0, underComp1.m_conId);
      assertEquals(0.0, underComp1.m_price, 0.01D);
  }

  @Test
  public void test2()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      Object object0 = new Object();
      boolean boolean0 = underComp0.equals(object0);
      assertEquals(0.0, underComp0.m_delta, 0.01D);
      assertEquals(0, underComp0.m_conId);
      assertEquals(0.0, underComp0.m_price, 0.01D);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      assertEquals(0, underComp0.m_conId);
      
      UnderComp underComp1 = new UnderComp();
      underComp0.m_conId = (-1290);
      boolean boolean0 = underComp0.equals((Object) underComp1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      UnderComp underComp1 = new UnderComp();
      assertEquals(0.0, underComp1.m_delta, 0.01D);
      
      underComp1.m_delta = 2006.627838035396;
      boolean boolean0 = underComp0.equals((Object) underComp1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      assertEquals(0.0, underComp0.m_price, 0.01D);
      
      UnderComp underComp1 = new UnderComp();
      underComp0.m_price = (-1.0);
      boolean boolean0 = underComp0.equals((Object) underComp1);
      assertEquals(false, boolean0);
  }
}
