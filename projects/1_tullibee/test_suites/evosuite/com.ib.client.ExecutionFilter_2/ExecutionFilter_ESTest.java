/*
 * This file was automatically generated by EvoSuite
 * Sun May 05 03:13:55 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.ExecutionFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExecutionFilter_ESTest extends ExecutionFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(1323, "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "");
      executionFilter0.m_exchange = "com.ib.client.ExecutionFiltHr";
      ExecutionFilter executionFilter1 = new ExecutionFilter(1323, "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFiltHr");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(boolean0);
      assertEquals(1323, executionFilter1.m_clientId);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(1323, "EGH8[", "EGH8[", "EGH8[", "O", "EGH8[", "com.ib.client.ExecutionFilter");
      executionFilter0.m_symbol = "com.ib.client.ExecutionFilter";
      ExecutionFilter executionFilter1 = new ExecutionFilter(1323, "EGH8[", "i8Y", "EGH8[", "EGH8[", "com.ib.client.ExecutionFilter", "EGH8[");
      executionFilter1.m_time = "EGH8[";
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(1323, executionFilter1.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      executionFilter0.m_acctCode = "";
      executionFilter0.m_exchange = "pR";
      ExecutionFilter executionFilter1 = new ExecutionFilter(0, "", "", "", "pR", "#", "");
      // Undeclared exception!
      try { 
        executionFilter0.equals(executionFilter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      ExecutionFilter executionFilter1 = new ExecutionFilter(1778, "LBLl:n*", "mqY0@0=>vjmF\"@ ljk", "", "", "", ",k8a$li{");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(1778, executionFilter1.m_clientId);
      assertEquals(0, executionFilter0.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(1323, "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "", "com.ib.client.ExecutionFilter", "");
      // Undeclared exception!
      try { 
        executionFilter0.equals("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.ib.client.ExecutionFilter
         //
         verifyException("com.ib.client.ExecutionFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(1338, "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter");
      ExecutionFilter executionFilter1 = new ExecutionFilter(1338, "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter", "com.ib.cli}nt.ExecutionFilter");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(1338, executionFilter1.m_clientId);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(1318, "EGH8[", "EGH8[", "EGH8[", "*", "EGH8[", "*");
      ExecutionFilter executionFilter1 = new ExecutionFilter(1318, "EGH8[", "EGH8[", "EGH8[", "+", "+", "EGH8[");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(1318, executionFilter1.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(1323, "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr");
      ExecutionFilter executionFilter1 = new ExecutionFilter(1323, "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFiltHr");
      executionFilter1.m_time = "com.ib.client.ExecutionFilter";
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(executionFilter1.equals((Object)executionFilter0));
      assertEquals(1323, executionFilter1.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(1323, "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr");
      ExecutionFilter executionFilter1 = new ExecutionFilter(1323, "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFiltHr", "com.ib.client.ExecutionFiltHr");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(boolean0);
      assertEquals(1323, executionFilter1.m_clientId);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(1300, "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "R");
      ExecutionFilter executionFilter1 = new ExecutionFilter();
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(boolean0);
      assertEquals(1300, executionFilter0.m_clientId);
      assertEquals(0, executionFilter1.m_clientId);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(1300, "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "R");
      ExecutionFilter executionFilter1 = new ExecutionFilter(1300, "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "com.ib.client.ExecutionFilter", "s");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(boolean0);
      assertEquals(1300, executionFilter1.m_clientId);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      boolean boolean0 = executionFilter0.equals((Object) null);
      assertEquals(0, executionFilter0.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      boolean boolean0 = executionFilter0.equals(executionFilter0);
      assertTrue(boolean0);
      assertEquals(0, executionFilter0.m_clientId);
  }
}
