/*
 * This file was automatically generated by EvoSuite
 * Sun May 05 02:51:27 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Execution;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Execution_ESTest extends Execution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Execution execution0 = new Execution();
      Execution execution1 = new Execution();
      // Undeclared exception!
      try { 
        execution0.equals(execution1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Execution execution0 = new Execution((-1), (-4065), "", "com.ib.client.Execution", "com.ib.client.Execution", "com.ib.client.Execution", "", 0, 362.83622, (-1), (-1), (-4065), (-1));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        execution0.equals(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to com.ib.client.Execution
         //
         verifyException("com.ib.client.Execution", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Execution execution0 = new Execution((-1), (-4065), "", "com.ib.client.Execution", "com.ib.client.Execution", "com.ib.client.Execution", "", 0, 362.83622, (-1), (-1), (-4065), (-1));
      Execution execution1 = new Execution();
      boolean boolean0 = execution0.equals(execution1);
      assertEquals((-4065), execution0.m_cumQty);
      assertEquals(0.0, execution1.m_price, 0.01);
      assertEquals((-1), execution0.m_liquidation);
      assertEquals((-1), execution0.m_orderId);
      assertEquals(362.83622, execution0.m_price, 0.01);
      assertEquals((-1), execution0.m_permId);
      assertFalse(boolean0);
      assertEquals(0, execution0.m_shares);
      assertEquals(0, execution1.m_liquidation);
      assertEquals((-4065), execution0.m_clientId);
      assertEquals(0, execution1.m_clientId);
      assertEquals(0, execution1.m_cumQty);
      assertEquals((-1.0), execution0.m_avgPrice, 0.01);
      assertEquals(0.0, execution1.m_avgPrice, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Execution execution0 = new Execution((-1), (-4065), "", "com.ib.client.Execution", "com.ib.client.Execution", "com.ib.client.Execution", "", 0, 362.83622, (-1), (-1), (-4065), (-1));
      boolean boolean0 = execution0.equals(execution0);
      assertEquals((-4065), execution0.m_clientId);
      assertEquals((-4065), execution0.m_cumQty);
      assertEquals(362.83622, execution0.m_price, 0.01);
      assertEquals((-1), execution0.m_permId);
      assertEquals((-1.0), execution0.m_avgPrice, 0.01);
      assertEquals(0, execution0.m_shares);
      assertEquals((-1), execution0.m_orderId);
      assertEquals((-1), execution0.m_liquidation);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Execution execution0 = new Execution();
      boolean boolean0 = execution0.equals((Object) null);
      assertEquals(0, execution0.m_liquidation);
      assertEquals(0, execution0.m_orderId);
      assertEquals(0, execution0.m_permId);
      assertEquals(0, execution0.m_cumQty);
      assertEquals(0.0, execution0.m_avgPrice, 0.01);
      assertEquals(0, execution0.m_shares);
      assertFalse(boolean0);
      assertEquals(0, execution0.m_clientId);
      assertEquals(0.0, execution0.m_price, 0.01);
  }
}
