/*
 * This file was automatically generated by EvoSuite
 */

package brain.ga;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import brain.ga.Evaluator;
import brain.ga.Genome;
import brain.ga.UniformCrossover;
import brain.ga.VectorGenome;
import java.util.Vector;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class UniformCrossoverEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UniformCrossover uniformCrossover0 = new UniformCrossover();
      Vector<VectorGenome> vector0 = new Vector<VectorGenome>(1794, 0);
      VectorGenome vectorGenome0 = new VectorGenome((Vector) vector0, (Evaluator) null);
      vector0.add(vectorGenome0);
      VectorGenome vectorGenome1 = (VectorGenome)uniformCrossover0.cross((Genome) vectorGenome0, (Genome) vectorGenome0);
      assertNotSame(vectorGenome0, vectorGenome1);
      assertNotNull(vectorGenome1);
      assertEquals(1, vectorGenome1.getGenesCount());
  }

  @Test
  public void test1()  throws Throwable  {
      UniformCrossover uniformCrossover0 = new UniformCrossover();
      Vector<VectorGenome> vector0 = new Vector<VectorGenome>();
      VectorGenome vectorGenome0 = new VectorGenome();
      vector0.add(vectorGenome0);
      VectorGenome vectorGenome1 = new VectorGenome((Vector) vector0, (Evaluator) null);
      VectorGenome vectorGenome2 = (VectorGenome)uniformCrossover0.cross((Genome) vectorGenome1, (Genome) vectorGenome1);
      assertNotNull(vectorGenome2);
      assertNotSame(vectorGenome1, vectorGenome2);
      assertEquals(1, vectorGenome2.getGenesCount());
  }
}
