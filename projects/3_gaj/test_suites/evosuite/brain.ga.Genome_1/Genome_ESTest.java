/*
 * This file was automatically generated by EvoSuite
 * Sat May 04 05:27:55 GMT 2019
 */

package brain.ga;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import brain.ga.Evaluator;
import brain.ga.Genome;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Genome_ESTest extends Genome_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Genome genome0 = new Genome();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        genome0.compareTo(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to brain.ga.Genome
         //
         verifyException("brain.ga.Genome", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Genome genome0 = new Genome();
      // Undeclared exception!
      try { 
        genome0.getScore();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("brain.ga.Genome", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Genome genome0 = new Genome();
      // Undeclared exception!
      try { 
        genome0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("brain.ga.Genome", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Genome genome0 = new Genome();
      Evaluator evaluator0 = genome0.getEvaluator();
      assertNull(evaluator0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Genome genome0 = new Genome();
      genome0.initialize();
  }
}
