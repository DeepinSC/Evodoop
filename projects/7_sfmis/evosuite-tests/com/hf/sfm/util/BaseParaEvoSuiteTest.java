/*
 * This file was automatically generated by EvoSuite
 */

package com.hf.sfm.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.hf.sfm.util.BasePara;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class BaseParaEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      int int0 = basePara0.getStart();
      assertEquals(false, basePara0.isPaging());
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setOrdersql((String) null);
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test2()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getQueryValue();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test3()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getDir();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test4()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getSqlpath();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test5()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getQuerySql();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test6()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setQueryValue("");
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test7()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setSqlpath("1W/&g<bz");
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test8()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setQuerySql("T(oAt1uoC ");
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test9()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setStart(0);
      assertEquals(false, basePara0.isPaging());
      assertEquals(0, basePara0.getStart());
  }

  @Test
  public void test10()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getArr2params();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test11()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getQueryparams();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test12()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setDir("");
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test13()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getOrdersql();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test14()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      int int0 = basePara0.getLimit();
      assertEquals(false, basePara0.isPaging());
      assertEquals(0, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setLimit(0);
      assertEquals(false, basePara0.isPaging());
      assertEquals(0, basePara0.getLimit());
  }

  @Test
  public void test16()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setGroupsql("T(oAt1uoC ");
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test17()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setSql("1W/&g<bz");
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test18()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setPaging(false);
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test19()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.setSort("T(oAt1uoC ");
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test20()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getSort();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test21()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      boolean boolean0 = basePara0.isPaging();
      assertEquals(false, boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getSql();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test23()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.getGroupsql();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test24()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      String[][] stringArray0 = new String[4][3];
      basePara0.setArr2params(stringArray0);
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test25()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      String[] stringArray0 = new String[5];
      basePara0.setQueryparams(stringArray0);
      String[][] stringArray1 = basePara0.single2plannar();
      assertNull(stringArray1);
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test26()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      basePara0.single2plannar();
      assertEquals(false, basePara0.isPaging());
  }

  @Test
  public void test27()  throws Throwable  {
      BasePara basePara0 = new BasePara();
      String[] stringArray0 = new String[8];
      basePara0.setQueryparams(stringArray0);
      String[][] stringArray1 = basePara0.single2plannar();
      assertNotNull(stringArray1);
      assertEquals(false, basePara0.isPaging());
  }
}
