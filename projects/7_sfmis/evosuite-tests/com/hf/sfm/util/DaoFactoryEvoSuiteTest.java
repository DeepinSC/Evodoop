/*
 * This file was automatically generated by EvoSuite
 */

package com.hf.sfm.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.hf.sfm.util.DaoFactory;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DaoFactoryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DaoFactory daoFactory0 = new DaoFactory();
      daoFactory0.closeSession();
  }

  @Test
  public void test1()  throws Throwable  {
      DaoFactory daoFactory0 = new DaoFactory();
      // Undeclared exception!
      try {
        daoFactory0.beginTransaction();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DaoFactory daoFactory0 = new DaoFactory();
      // Undeclared exception!
      try {
        daoFactory0.decrypt("Jo@3SCFnWUOt{zbtT");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * String length must be a multiple of four.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DaoFactory daoFactory0 = new DaoFactory();
      // Undeclared exception!
      try {
        daoFactory0.save((Object) daoFactory0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      DaoFactory daoFactory0 = new DaoFactory();
      String string0 = daoFactory0.encrypt("4lN#f$oAZN4.'O)k");
      assertEquals("NGxOI2Ykb0FaTjQuJ08paw==", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      DaoFactory daoFactory0 = new DaoFactory();
      // Undeclared exception!
      try {
        daoFactory0.update((Object) "identity not null");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DaoFactory daoFactory0 = new DaoFactory();
      // Undeclared exception!
      try {
        daoFactory0.rollback();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DaoFactory daoFactory0 = new DaoFactory();
      // Undeclared exception!
      try {
        daoFactory0.commit();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      DaoFactory daoFactory0 = new DaoFactory();
      daoFactory0.closeAll();
  }
}
